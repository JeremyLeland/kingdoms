Next:
  - SOON: Walking animation (swinging empty hands)
  - Separate attachments for axe and carry
    - Have axe on our back when not used? (at least for demo purposes for now)
  - Stone (draw it, harvest it, work on phases and whatever results)
  - Draw wireframe bounds for entities (to validate)
  - Should carry be an array of items, or should we carry just one item (e.g. one stack of wood)?
    - We only carry one tool at a time. One weapon, one shield. 
    - Should whatever we carry be a single stack with a # of resource? Like the basket of berries.
    - I don't think we're going to mix resources, e.g. carry two pieces of wood and one piece of stone at same time


- Resources
  - Wood (forest trees)
    - Chop down tree first, then harvest from felled tree
      - Standing trees have health (like a living sheep), "attack" and "kill" first to get to resources
    - Should add a stump to remain after tree is felled
    - Harvesting from felled tree makes felled part sink? Or hide sections of leaves for 25percent, 50percent, etc?
  - Stone (rocks)
    - Break off pieces of stone in phases
    - Small flat bit of rock remains
  - Berries (bushes)
    - Fill basket with berries from tree
    - Draw fewer berries in tree as they are harvested? (not necessarily 1:1)
    - Regrow over time? Pick down first, then wait for regrow?
  - Apples (orchard trees)
    - Fill basket with apples from tree
    - Draw fewer apples in tree as they are havested? (not necessarily 1:1)
    - Regrow over time?
  - Farms
    - Low gather motion for harvesting. percent phases apply to individual plants?

- "Visible" property
  - As resources are harvested, we remove parts of them (tree top vanishes, parts of rock vanish, berries vanish)
  - Maybe we add a 'hidden' or 'visible' property (whichever makes more sense, maybe visible defaulting to true)
  - Resources maybe have a 'state' or 'status' or 'mode' (kind of like an animation) where certain properties can be applied?
    - Status for resources could be 'felled' or '25percent'
    - Status for workers could be 'harvest_wood' or 'harvest_stone'
    - We could potentially use this to show axe, pick, weapon, etc when worker is in given harvest mode
      - Then we could bind whatever axe they have to 'axe' without having to add and remove it every time they change actions

- Farm
  - Farms are just the framework, harvest individual plants that are attached?
  - Maybe till the soil animation for the farm itself, but then harvest individual plants?
  - Rows of cylinders, sphere end caps
  - Plants start folded up under ground
  - Animation raises them and opens them up? (for corn, maybe?)
  - Carrots are orange cone and green stuff
    - Slowly raise so part of orange sticks up and make green part bigger?
    - Carry carrots in basket?

- Animations
  - Add swinging hands animation for walking without carrying anything
  - Will this happen? 
    - If they are walking to harvest, they can carry the harvest tool
    - If they are dropping off, then they are carrying resource
    - Maybe it happens if they are going to stockpile to pick something up

- Custom shaders for texturing
  - Weave for bowel
  - Curved triangular leaves for bush
  - Wood lines for lumber
  - Bark pattern for tree trunk, some sort of leaves for top (maybe the wavy base from demo tree?)
  - For now, these will import common lighting code
    - Eventually separate lighting code with two-pass rendering? (might make multiple lights easier)

- Hands and tools/weapons
  - The worker needs to control how hands are rendered (e.g. skin color )
  - The tool/weapon knows where the hand(s) should go
    - e.g. how wide apart to hold wood vs stone
    - e.g. two hands at bottom of big sword, hands spread apart along axe, single hand for small sword or shield
  - Is there a way for the tool/weapon to control hand placement but the worker to manage hand drawing?
    - worker provides initial location and rotation, tool provides offset from animation (and applies this to hands)
    - Tool motion is relative to worker, but hand motion is relative to tool


- Control harvesting by setting desired minimums
  - Show table of available resources next to number input to set desired level
  - Grab more any time actual number drops below desired

- Stockpiles have their own delay?
  - Makes things look better, but not high priority
  - So several workers can't dump several items at same time

- Workers avoid each other when walking
  - NOW: Currently avoiding each other decently enough for now, postpone the rest of this
  - And avoid trees and stockpiles
  - Make 2D test of this to try different avoidance techniques
    - Will want pathing at some point (e.g. account for lower transport costs for roads)
    - Classic avoid vector leads to lots of weird turning
      - What about yielding? Maybe one avoids, the other yields? Upper left always yields, for instance
      - What if we only turned right? Aim right until no longer close, then resume normal aiming?


- Pick a common orientation for carried items
  - e.g. a swung piece of wood should look the same as a swung axe
    - model everything upright and then rotate it? or model everything as if its lying flat?
    - Leaning toward workers always having tools, not picking them up off ground
    - May still make nicer tools that need to be shown on ground at some point, but not priority
  - Quaternions (for more reliable rotation, especially once I make axes lay flat by default)
    - Eventually, not blocking for the moment -- especially if tools won't be laying on ground for now

- Scene class
  - NOW: Organizational, but not blocking anything for now
  - Hold GL context (not sure if I want to do this or pass it in)
  - Camera and light information (still need to this, lighting is currently hardcoded)
    - Maybe this is more of a World thing than a Scene thing?
      - Lights should be in the world at least
      - Camera may be more of a local state...not sure if makes sense for world
