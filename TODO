- Does the axe have a lifecycle of sorts? Does it need to be picked up from somewhere and returned there?
  - Maybe keep them by town center? Or lumber yard, if we build those?
    - Stronghold has a building for each wood cutter. If we do that, the axe could be part of that building.

- Scene class
  - Hold GL context (not sure if I want to do this or pass it in)
  - Camera and light information (still need to this, lighting is currently hardcoded)
    - Maybe this is more of a World thing than a Scene thing?
      - Lights should be in the world at least
      - Camera may be more of a local state...not sure if makes sense for world

- Animations
  - Blend multiple animations (e.g. walk and carry)
  - Add swinging hands animation for walking without carrying anything
  - Once or loop (just have loop: true or false?)

- Workers avoid each other when walking
  - And avoid trees and stockpiles
  - Make 2D test of this to try different avoidance techniques
    - Will want pathing at some point (e.g. account for lower transport costs for roads)
    - Classic avoid vector leads to lots of weird turning
      - What about yielding? Maybe one avoids, the other yields? Upper left always yields, for instance
      - What if we only turned right? Aim right until no longer close, then resume normal aiming?

- Stockpiles have their own delay?
  - So several workers can't dump several items at same time

- Pan camera with arrow keys

- Bush with berries
  - Bucket with berries to carry
    - Combine meshes? (create a bunch of half spheres and stick them together as one?)
      - Is this more efficient than a dozen or so individual spheres?

- Farm
  - Rows of cylinders, sphere end caps
  - Plants start folded up under ground
  - Animation raises them and opens them up? (for corn, maybe?)
  - Carrots are orange cone and green stuff
    - Slowly raise so part of orange sticks up and make green part bigger?
    - Carry carrots in basket?

- Control harvesting by setting desired minimums
  - Show table of available resources next to number input to set desired level
  - Grab more any time actual number drops below desired
